{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Quickstart Guide \u00b6 TODO \u00b6","title":"Home"},{"location":"#quickstart-guide","text":"","title":"Quickstart Guide"},{"location":"#todo","text":"","title":"TODO"},{"location":"contributing/","text":"Contributor Guide \u00b6 This project is open-source under the MIT license and welcomes contributions in the form of bug reports, feature requests, and pull requests. Here is a list of important resources for contributors: Source Code Documentation Issue Tracker How to report a bug \u00b6 Report bugs on the Issue Tracker . When filing an issue, make sure to answer these questions: Which operating system and Python version are you using? Which version of this project are you using? What did you do? What did you expect to see? What did you see instead? The best way to get your bug fixed is to provide a test case, and/or steps to reproduce the issue. How to request a feature \u00b6 Request features on the Issue Tracker . How to set up your development environment \u00b6 Prefered method Install the package and setup your workstation pip install workstation-cli --user workstation-install If you don't want to setup your workstation with this package make sure to have Python 3.8+ and the following tools: Poetry Nox nox-poetry Fork the repository on GitHub , and clone the fork to your local machine. pyenv install -s 3 .8.12 pyenv local 3 .8.12 poetry lock nox -s pre-commit -- install nox -s pre-commit -- install --hook-type commit-msg How to test the project \u00b6 Please refer to the User Guide for instructions on how to run the test suite locally. How to submit changes \u00b6 Open a pull request to submit changes to this project. Your pull request needs to meet the following guidelines for acceptance: The Nox test suite must pass without errors and warnings. Include unit tests. This project maintains 100% code coverage. If your changes add functionality, update the documentation accordingly. Feel free to submit early, though---we can always iterate on this. It is recommended to open an issue before starting work on anything. This will allow a chance to talk it over with the owners and validate your approach. How to accept changes \u00b6 You need to be a project maintainer to accept changes. Before accepting a pull request, go through the following checklist: The PR must pass all checks. The PR must have a descriptive title. The PR should be labelled with the kind of change. To merge the pull request, follow these steps: Click Squash and Merge . (Select this option from the dropdown menu of the merge button, if it is not shown.) Click Confirm squash and merge . Click Delete branch . How to make a release \u00b6 You need to be a project maintainer to make a release. Before making a release, go through the following checklist: All pull requests for the release have been merged. The default branch passes all checks. Releases are made by publishing a GitHub Release. A draft release is being maintained based on merged pull requests. To publish the release, follow these steps: Click Edit next to the draft release. Enter a tag with the new version. Enter the release title, also the new version. Edit the release description, if required. Click Publish Release . After publishing the release, the following automated steps are triggered: The Git tag is applied to the repository.","title":"Contributing"},{"location":"contributing/#contributor-guide","text":"This project is open-source under the MIT license and welcomes contributions in the form of bug reports, feature requests, and pull requests. Here is a list of important resources for contributors: Source Code Documentation Issue Tracker","title":"Contributor Guide"},{"location":"contributing/#how-to-report-a-bug","text":"Report bugs on the Issue Tracker . When filing an issue, make sure to answer these questions: Which operating system and Python version are you using? Which version of this project are you using? What did you do? What did you expect to see? What did you see instead? The best way to get your bug fixed is to provide a test case, and/or steps to reproduce the issue.","title":"How to report a bug"},{"location":"contributing/#how-to-request-a-feature","text":"Request features on the Issue Tracker .","title":"How to request a feature"},{"location":"contributing/#how-to-set-up-your-development-environment","text":"Prefered method Install the package and setup your workstation pip install workstation-cli --user workstation-install If you don't want to setup your workstation with this package make sure to have Python 3.8+ and the following tools: Poetry Nox nox-poetry Fork the repository on GitHub , and clone the fork to your local machine. pyenv install -s 3 .8.12 pyenv local 3 .8.12 poetry lock nox -s pre-commit -- install nox -s pre-commit -- install --hook-type commit-msg","title":"How to set up your development environment"},{"location":"contributing/#how-to-test-the-project","text":"Please refer to the User Guide for instructions on how to run the test suite locally.","title":"How to test the project"},{"location":"contributing/#how-to-submit-changes","text":"Open a pull request to submit changes to this project. Your pull request needs to meet the following guidelines for acceptance: The Nox test suite must pass without errors and warnings. Include unit tests. This project maintains 100% code coverage. If your changes add functionality, update the documentation accordingly. Feel free to submit early, though---we can always iterate on this. It is recommended to open an issue before starting work on anything. This will allow a chance to talk it over with the owners and validate your approach.","title":"How to submit changes"},{"location":"contributing/#how-to-accept-changes","text":"You need to be a project maintainer to accept changes. Before accepting a pull request, go through the following checklist: The PR must pass all checks. The PR must have a descriptive title. The PR should be labelled with the kind of change. To merge the pull request, follow these steps: Click Squash and Merge . (Select this option from the dropdown menu of the merge button, if it is not shown.) Click Confirm squash and merge . Click Delete branch .","title":"How to accept changes"},{"location":"contributing/#how-to-make-a-release","text":"You need to be a project maintainer to make a release. Before making a release, go through the following checklist: All pull requests for the release have been merged. The default branch passes all checks. Releases are made by publishing a GitHub Release. A draft release is being maintained based on merged pull requests. To publish the release, follow these steps: Click Edit next to the draft release. Enter a tag with the new version. Enter the release title, also the new version. Edit the release description, if required. Click Publish Release . After publishing the release, the following automated steps are triggered: The Git tag is applied to the repository.","title":"How to make a release"}]}